apiVersion: batch/v1
kind: Job
metadata:
  name: "package-registry-upload-{{.Release.Revision}}"
  namespace: zarf
  labels:
    app: package-registry-upload
spec:
  backoffLimit: 6
  completions: 1
  parallelism: 1
  ttlSecondsAfterFinished: 1800
  template:
    metadata:
      labels:
        app: package-registry-upload
    spec:
      imagePullSecrets:
        - name: private-registry
      initContainers:
        - name: package-data-loader
          image: alpine:3.16
          command:
            [
              "sh",
              "-c",
              'while [ ! -f /packages/###ZARF_DATA_INJECTON_MARKER### ]; do echo "waiting for zarf data sync" && sleep 1; done; echo "we are done waiting!"',
            ]
          resources:
            requests:
              memory: "16Mi"
              cpu: "50m"
            limits:
              memory: "64Mi"
              cpu: "100m"
          volumeMounts:
            - mountPath: /packages
              name: packages
      containers:
        - name: package-data-injection
          image: "###ZARF_CONST_PUBLISHER_IMAGE###"
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          args: ["./scripts/upload.sh"]
          volumeMounts:
            - name: tls-certs
              mountPath: /usr/local/share/ca-certificates
            - name: packages
              mountPath: /packages
            - name: uploader-scripts
              mountPath: /scripts
          readinessProbe:
            exec:
              command:
                - "cat"
                - "/packages/###ZARF_DATA_INJECTON_MARKER###"
            initialDelaySeconds: 10
            periodSeconds: 15
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 10.43.0.10
        searches:
          - dev.local
          - zarf.svc.cluster.local
          - svc.cluster.local
          - cluster.local
        options:
          - name: ndots
            value: "5"
      restartPolicy: OnFailure
      volumes:
        - name: packages
          emptyDir: {}
        - name: tls-certs
          secret:
            secretName: agent-redirector-tls
            items:
              - key: tls.ca
                path: tls.crt
        - name: uploader-scripts
          configMap:
            name: uploader-scripts
            defaultMode: 0744
