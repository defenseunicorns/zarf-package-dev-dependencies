apiVersion: batch/v1
kind: Job
metadata:
  name: "agent-redirector-npm-job-{{.Release.Revision}}"
  namespace: zarf
  labels:
    app: agent-redirector-npm-job
spec:
  backoffLimit: 6
  completions: 1
  parallelism: 1
  ttlSecondsAfterFinished: 120
  template:
    metadata:
      labels:
        app: agent-redirector-npm-job
    spec:
      imagePullSecrets:
        - name: private-registry
      containers:
        - name: create-secret
          image: ghcr.io/defenseunicorns/zarf-package/dev-deps-util:209f5c61ed58083e1d4338596d4a00204094484e
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/bash"
            - "-ec"
            - |
              ZARF_USER=$(cat /etc/zarf-state/state | jq -r '.gitServer.pushUsername')
              ZARF_PASS=$(cat /etc/zarf-state/state | jq -r '.gitServer.pushPassword')
              NPM_TOKEN=$(curl -H "Content-Type: application/json" -d '{"name":"agent-redirector-token"}' -u ${ZARF_USER}:${ZARF_PASS} http://zarf-gitea-http.zarf.svc.cluster.local:3000/api/v1/users/${ZARF_USER}/tokens | jq -r '.sha1')
              if [ "$NPM_TOKEN" != "null" ]; then kubectl create secret generic agent-redirector-npm --from-literal=npm-token="${NPM_TOKEN}"; else echo "WARNING: a new NPM token was unable to be created; using the previous one if it exists."; fi
          resources:
            requests:
              memory: "32Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          volumeMounts:
            - name: zarf-state
              mountPath: /etc/zarf-state
              readOnly: true
      restartPolicy: OnFailure
      serviceAccount: agent-redirector-npm-acct
      serviceAccountName: agent-redirector-npm-acct
      volumes:
        - name: zarf-state
          secret:
            secretName: zarf-state
